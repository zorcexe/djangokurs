services:
  app:
    build:
      context: ./app
      dockerfile: Dockerfile.prod

    command: gunicorn --bind 0.0.0.0:8000 project.asgi -w 4 -k uvicorn.workers.UvicornWorker
    restart: always
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    expose:
      - 8000
    env_file:
      - ./.env.prod
    depends_on:
      - db
      - redis

  db:
    container_name: postgres_playground
    image: postgres:13.0-alpine
    restart: always
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "basepro_prod", "-U", "basepro"]
      timeout: 45s
      interval: 10s
      retries: 10
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env.prod.db

  redis:
    restart: always
    image: redis:alpine
    sysctls:
      - net.core.somaxconn=65535
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 45s
      interval: 10s
      retries: 10

  celery:
    restart: always
    build:
      context: ./app
      dockerfile: Dockerfile.prod
    command: celery -A project.celery.app worker -l info
    volumes:
      - ./app:/app
    env_file:
      - ./.env.prod
    depends_on:
      - redis
      - app

  celery-beat:
    restart: always
    build:
      context: ./app
      dockerfile: Dockerfile.prod
    command: celery -A project.celery.app beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - ./app:/app
    env_file:
      - ./.env.prod
    depends_on:
      - redis
      - app

  dashboard:
    image: mher/flower
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - FLOWER_PORT=8889
    ports:
      - 127.0.0.1:8889:8889
    depends_on:
      - app
      - redis
      - celery


volumes:
  postgres_data:
  static_volume:
  media_volume:

networks:
  default:
    external: true
    name: proxymanager_default
